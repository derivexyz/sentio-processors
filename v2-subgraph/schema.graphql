type BalanceAdjusted @entity(immutable: true) {
  id: Bytes!
  subaccount: SubAccount!
  asset: Asset!
  accountId: BigInt! # uint256
  manager: Bytes! # address
  amount: BigDecimal! # int256
  preBalance: BigDecimal! # int256
  postBalance: BigDecimal! # int256
  tradeId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SubAccount @entity {
  id: String!
  balances: [SubAccountBalance!]! @derivedFrom(field: "subaccount")
  balanceAdjustments: [BalanceAdjusted!]! @derivedFrom(field: "subaccount")
}

type SubAccountBalance @entity {
  id: String! # Composite key: subaccount + asset
  subaccount: SubAccount!
  asset: Asset!
  balance: BigDecimal! # int256
  lastUpdated: BigInt! # timestamp
}

type Asset @entity {
  id: Bytes! # bytes32 (assetAndSubId)
  asset: String!
  subId: BigInt!
  balances: [SubAccountBalance!]! @derivedFrom(field: "asset")
  balanceAdjustments: [BalanceAdjusted!]! @derivedFrom(field: "asset")
}